---
kind: pipeline
type: docker
name: compliance

trigger:
  branch:
    include:
      - develop
      - main

steps:
  - name: lint-server
    image: node:18
    commands:
      - ./scripts/lint-server.sh
  - name: lint-console
    image: node:18
    commands:
      - ./scripts/lint-console.sh
  - name: lint-frontend
    image: node:18
    commands:
      - ./scripts/lint-frontend.sh

---
kind: pipeline
type: docker
name: testing-linux-amd64

platform:
  os: linux
  arch: amd64

trigger:
  branch:
    include:
      - develop
      - main

depends_on:
  - compliance

steps:
  - name: test-server-node-14
    image: node:14
    commands:
      - cd server
      - npm ci --unsafe-perm
      - npx jest --runInBand --forceExit
  - name: test-server-node-16
    image: node:16
    commands:
      - cd server
      - npm ci
      - npx jest --runInBand --forceExit
  - name: test-server-node-18
    image: node:18
    environment:
      CC_TEST_REPORTER_ID:
        from_secret: cc_test_reporter_id
    commands:
      - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      - chmod +x ./cc-test-reporter
      - ./cc-test-reporter before-build
      - cd server
      - npm ci
      - npx jest --runInBand --forceExit --coverage
      - ../scripts/report-code-coverage.sh
  - name: docker-testimage
    pull: always
    image: plugins/docker:latest
    settings:
      repo: registry.abrain.dev:5000/alarmdisplay/display
      registry: registry.abrain.dev:5000
      tags: testing-amd64
    environment:
      DOCKER_PASSWORD:
        from_secret: tmpregistry_password
      DOCKER_USERNAME:
        from_secret: tmpregistry_username
    when:
      event:
        - push

---
kind: pipeline
type: docker
name: docker-linux-amd64

platform:
  os: linux
  arch: amd64

trigger:
  branch:
    include:
      - develop
      - main
  event:
    - push

depends_on:
  - testing-linux-amd64

services:
  - name: mariadb
    image: mariadb
    pull: if-not-exists
    environment:
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: yes
      MARIADB_DATABASE: display
  - name: sut
    image: registry.abrain.dev:5000/alarmdisplay/display:testing-amd64
    pull: always
    environment:
      MYSQL_URI: mysql://root:@mariadb:3306/display

steps:
  - name: test-api
    image: node:18
    commands:
      - cd test-api
      - npm ci
      - SERVER_URL=http://sut:3031 npm start

image_pull_secrets:
  - dockerconfig
---
kind: signature
hmac: 68328610251e0f154847bf14f46242728a874446877c605f17631ffe6b057cbe

...
